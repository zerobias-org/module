{
  "name": "add-operation",
  "description": "Add a single operation to an existing module",
  "usage": "/add-operation <module-identifier> <operation-name>",

  "arguments": [
    {
      "name": "module-identifier",
      "description": "Module identifier in format: vendor-service or vendor-suite-service",
      "required": true,
      "type": "string",
      "pattern": "^[a-z0-9]+-[a-z0-9]+(-[a-z0-9]+)?$",
      "examples": [
        "github-github",
        "amazon-aws-s3",
        "avigilon-alta-access",
        "gitlab-gitlab"
      ]
    },
    {
      "name": "operation-name",
      "description": "Name of the operation to add (use camelCase, start with verb)",
      "required": true,
      "type": "string",
      "pattern": "^(list|get|create|update|delete|search)[A-Z][a-zA-Z0-9]*$",
      "examples": [
        "listWebhooks",
        "getUser",
        "createRepository",
        "updateIssue",
        "deleteComment",
        "searchRepositories"
      ]
    }
  ],

  "workflow": {
    "file": "claude/orchestration/workflow-templates/add-operation-workflow.md",
    "name": "Add Operation Workflow",
    "summary": "Complete workflow for adding a single operation to existing module",
    "duration": "45-70 minutes",
    "phases": [
      "Phase 0: Credential Check (MANDATORY)",
      "Phase 1: Research & Analysis",
      "Phase 2: API Specification Design",
      "Phase 3: Type Generation",
      "Phase 4: Implementation",
      "Phase 5: Testing",
      "Phase 6: Build & Finalization"
    ],
    "gates": [
      "Gate 1: API Specification",
      "Gate 2: Type Generation",
      "Gate 3: Implementation",
      "Gate 4: Test Creation",
      "Gate 5: Test Execution",
      "Gate 6: Build"
    ]
  },

  "agents": [
    "@credential-manager",
    "@api-researcher",
    "@operation-analyst",
    "@api-architect",
    "@schema-specialist",
    "@api-reviewer",
    "@build-validator",
    "@operation-engineer",
    "@mapping-engineer",
    "@style-reviewer",
    "@test-orchestrator",
    "@mock-specialist",
    "@producer-ut-engineer",
    "@producer-it-engineer",
    "@ut-reviewer",
    "@it-reviewer",
    "@build-reviewer",
    "@gate-controller"
  ],

  "execution": {
    "entrypoint": "orchestrate_add_operation",
    "validates": "All 6 gates must pass",
    "outputs": [
      "Operation implemented in Producer",
      "Mappers created/updated",
      "Unit tests created",
      "Integration tests created",
      "All tests passing",
      "Build successful",
      "Dependencies locked"
    ]
  },

  "prerequisites": {
    "module_exists": true,
    "git_clean": true,
    "tests_passing": true,
    "credentials_available": "optional (will prompt)"
  },

  "examples": [
    {
      "command": "/add-operation github-github listWebhooks",
      "description": "Add listWebhooks operation to GitHub module"
    },
    {
      "command": "/add-operation amazon-aws-s3 listBuckets",
      "description": "Add listBuckets operation to AWS S3 module"
    },
    {
      "command": "/add-operation avigilon-alta-access unlockDoor",
      "description": "Add unlockDoor operation to Avigilon Alta Access module"
    }
  ],

  "error_handling": {
    "module_not_found": "Error: Module {module-identifier} not found. Use /create-module first.",
    "invalid_operation_name": "Error: Operation name must start with: list, get, create, update, delete, or search",
    "gate_failure": "Stop workflow, report failure, guide to fix, re-validate",
    "credentials_missing": "Prompt user: provide now or continue without (skip integration tests)"
  },

  "success_criteria": [
    "All 6 gates passed",
    "Operation fully implemented",
    "Tests created and passing",
    "Build successful",
    "Ready for commit"
  ]
}
