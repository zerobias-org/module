{
  "name": "add-operations",
  "description": "Add multiple operations to an existing module (executed sequentially)",
  "usage": "/add-operations <module-identifier> <operation1,operation2,operation3>",

  "arguments": [
    {
      "name": "module-identifier",
      "description": "Module identifier in format: vendor-service or vendor-suite-service",
      "required": true,
      "type": "string",
      "pattern": "^[a-z0-9]+-[a-z0-9]+(-[a-z0-9]+)?$",
      "examples": [
        "github-github",
        "amazon-aws-s3",
        "avigilon-alta-access"
      ]
    },
    {
      "name": "operations",
      "description": "Comma-separated list of operations (no spaces)",
      "required": true,
      "type": "string",
      "pattern": "^(list|get|create|update|delete|search)[A-Za-z0-9]+(,(list|get|create|update|delete|search)[A-Za-z0-9]+)*$",
      "examples": [
        "listWebhooks,getWebhook,createWebhook",
        "list,get,create,update,delete",
        "listUsers,getUser,createUser,updateUser,deleteUser"
      ]
    }
  ],

  "workflow": {
    "file": "claude/orchestration/workflow-templates/update-module-workflow.md",
    "name": "Update Module Workflow",
    "summary": "Sequential execution of add-operation-workflow for each operation",
    "duration": "~45-70 min per operation",
    "strategy": "One operation at a time, validate before next",
    "phases": [
      "Phase 0: Request Analysis",
      "Phase 1: Credential Check (once for all)",
      "Phase 2: Sequential Operation Implementation",
      "Phase 3: Final Validation"
    ]
  },

  "agents": [
    "@operation-analyst",
    "@credential-manager",
    "All agents from add-operation-workflow (per operation)",
    "@build-reviewer",
    "@gate-controller"
  ],

  "execution": {
    "entrypoint": "orchestrate_update_module",
    "strategy": "Sequential - complete each operation before next",
    "validates": "All 6 gates per operation",
    "checkpoint_commits": "Optional after each operation",
    "outputs": [
      "All operations implemented",
      "All tests passing",
      "Build successful",
      "Dependencies locked"
    ]
  },

  "prerequisites": {
    "module_exists": true,
    "git_clean": true,
    "tests_passing": true
  },

  "examples": [
    {
      "command": "/add-operations github-github listWebhooks,getWebhook,createWebhook,updateWebhook,deleteWebhook",
      "description": "Add webhook CRUD operations to GitHub module"
    },
    {
      "command": "/add-operations amazon-aws-s3 listBuckets,createBucket,deleteBucket",
      "description": "Add bucket management operations to AWS S3 module"
    },
    {
      "command": "/add-operations avigilon-alta-access listDoors,unlockDoor,lockDoor",
      "description": "Add door operations to Avigilon Alta Access module"
    }
  ],

  "operation_order": {
    "recommended": [
      "1. list operations (establish data structure)",
      "2. get operations (single resource retrieval)",
      "3. create operations (establish write patterns)",
      "4. update operations (reuse create patterns)",
      "5. delete operations (simple, last)"
    ],
    "note": "System will suggest optimal order based on dependencies"
  },

  "error_handling": {
    "module_not_found": "Error: Module {module-identifier} not found",
    "operation_failure": "Stop workflow, fix operation, resume from failed operation",
    "final_build_failure": "All operations individually passed but conflicts detected, resolve conflicts"
  },

  "success_criteria": [
    "All operations implemented",
    "Each operation passed all 6 gates",
    "Final build successful",
    "All cumulative tests passing",
    "No conflicts between operations"
  ]
}
