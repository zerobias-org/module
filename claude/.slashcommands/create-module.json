{
  "name": "create-module",
  "description": "Create a new module from scratch with MVP (connect + one operation)",
  "usage": "/create-module <vendor> <service> [suite]",

  "arguments": [
    {
      "name": "vendor",
      "description": "Vendor/company name (lowercase, alphanumeric)",
      "required": true,
      "type": "string",
      "pattern": "^[a-z0-9]+$",
      "examples": [
        "github",
        "amazon",
        "avigilon",
        "gitlab",
        "slack"
      ]
    },
    {
      "name": "service",
      "description": "Service/product name (lowercase, alphanumeric)",
      "required": true,
      "type": "string",
      "pattern": "^[a-z0-9]+$",
      "examples": [
        "github",
        "s3",
        "access",
        "gitlab",
        "api"
      ]
    },
    {
      "name": "suite",
      "description": "Optional suite/product line name (e.g., aws, alta)",
      "required": false,
      "type": "string",
      "pattern": "^[a-z0-9]+$",
      "examples": [
        "aws",
        "alta",
        "gcp"
      ]
    }
  ],

  "workflow": {
    "file": "claude/orchestration/workflow-templates/create-module-workflow.md",
    "name": "Create Module Workflow",
    "summary": "Complete module creation with MVP (connection + one operation)",
    "duration": "3-4 hours",
    "strategy": "MVP first (validate stack), then expand",
    "phases": [
      "Phase 1: Discovery & Planning",
      "Phase 2: Scaffolding",
      "Phase 3: API Specification Design",
      "Phase 4: Type Generation",
      "Phase 5: Implementation",
      "Phase 6: Testing",
      "Phase 7: Documentation",
      "Phase 8: Build & Finalization",
      "Phase 9: Expansion (optional)"
    ],
    "gates": [
      "Gate 1: API Specification",
      "Gate 2: Type Generation",
      "Gate 3: Implementation",
      "Gate 4: Test Creation",
      "Gate 5: Test Execution",
      "Gate 6: Build"
    ]
  },

  "agents": [
    "@product-specialist",
    "@api-researcher",
    "@operation-analyst",
    "@credential-manager",
    "@module-scaffolder",
    "@security-auditor",
    "@api-architect",
    "@schema-specialist",
    "@api-reviewer",
    "@build-validator",
    "@client-engineer",
    "@operation-engineer",
    "@mapping-engineer",
    "@style-reviewer",
    "@test-orchestrator",
    "@mock-specialist",
    "@connection-ut-engineer",
    "@producer-ut-engineer",
    "@connection-it-engineer",
    "@producer-it-engineer",
    "@ut-reviewer",
    "@it-reviewer",
    "@documentation-writer",
    "@build-reviewer",
    "@gate-controller"
  ],

  "execution": {
    "entrypoint": "orchestrate_create_module",
    "scaffolding": "Yeoman generator @auditmation/hub-module",
    "mvp_strategy": "Connection + one operation (typically list or get)",
    "validates": "All 6 gates",
    "outputs": [
      "Module scaffolded",
      "Authentication working",
      "One operation functional",
      "All tests passing",
      "Documentation complete",
      "Ready for expansion"
    ]
  },

  "module_path": {
    "with_suite": "package/{vendor}/{suite}/{service}/",
    "without_suite": "package/{vendor}/{service}/",
    "examples": [
      "package/github/github/",
      "package/amazon/aws/s3/",
      "package/avigilon/alta/access/"
    ]
  },

  "prerequisites": {
    "yeoman_installed": true,
    "generator_available": "@auditmation/hub-module",
    "vendor_api_accessible": true,
    "credentials_available": "optional (can setup during workflow)"
  },

  "examples": [
    {
      "command": "/create-module github github",
      "description": "Create GitHub module",
      "path": "package/github/github/",
      "identifier": "github-github"
    },
    {
      "command": "/create-module amazon s3 aws",
      "description": "Create AWS S3 module",
      "path": "package/amazon/aws/s3/",
      "identifier": "amazon-aws-s3"
    },
    {
      "command": "/create-module avigilon access alta",
      "description": "Create Avigilon Alta Access module",
      "path": "package/avigilon/alta/access/",
      "identifier": "avigilon-alta-access"
    },
    {
      "command": "/create-module slack api",
      "description": "Create Slack API module",
      "path": "package/slack/api/",
      "identifier": "slack-api"
    }
  ],

  "mvp_definition": {
    "connection": [
      "connect(profile) - Authenticate and setup",
      "disconnect() - Clean up connection",
      "isConnected() - Check connection status"
    ],
    "one_operation": [
      "Suggested: list operation (establishes data patterns)",
      "Alternative: get operation (if list not applicable)",
      "Goal: Validate full stack works"
    ]
  },

  "auth_patterns": {
    "api_key_token": "Use tokenProfile.yml from types-core",
    "oauth_client": "Use oauthClientProfile.yml from types-core",
    "oauth_token": "Use oauthTokenProfile.yml from types-core",
    "email_password": "Use basicConnection.yml from types-core or extend"
  },

  "error_handling": {
    "module_exists": "Error: Module {identifier} already exists at {path}",
    "scaffold_failed": "Error: Yeoman scaffolding failed, check generator installation",
    "credentials_unavailable": "Prompt: Provide credentials or continue without (skip integration tests)"
  },

  "success_criteria": [
    "Module scaffolded correctly",
    "Connects to service successfully",
    "One operation works end-to-end",
    "All tests passing",
    "Documentation complete (USERGUIDE.md)",
    "All 6 gates passed",
    "Ready for production use"
  ],

  "next_steps": {
    "expand": "Use /add-operations to add more operations",
    "publish": "npm publish when ready",
    "integrate": "Use in production systems"
  }
}
