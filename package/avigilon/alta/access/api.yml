openapi: 3.0.3
info:
  x-product-infos:
    - $ref: "./node_modules/@zerobias-org/product-avigilon-alta-access/catalog.yml#/Product"
  version: 0.2.1
  title: '@zerobias-org/module-avigilon-alta-access'
  description: Avigilon Alta Access
  x-impl-name: Access
tags:
  - name: user
    description: User management operations
  - name: group
    description: Group management operations
  - name: acu
    description: Access control unit operations
  - name: site
    description: Site management operations
  - name: zone
    description: Zone management operations
  - name: auth
    description: Authentication operations
  - name: entry
    description: Entry management operations
components:
  parameters:
    userIdParam:
      name: userId
      in: path
      required: true
      schema:
        type: integer
        format: int64
      description: Unique identifier for a user
    groupIdParam:
      name: groupId
      in: path
      required: true
      schema:
        type: integer
        format: int64
      description: Unique identifier for a group
    acuIdParam:
      name: acuId
      in: path
      required: true
      schema:
        type: integer
        format: int64
      description: Unique identifier for an access control unit (ACU)
    organizationIdParam:
      name: organizationId
      in: path
      required: true
      schema:
        type: string
      description: Unique identifier for the organization
    pageNumberParam:
      $ref: "./node_modules/@auditmation/types-core/schema/pageNumberParam.yml"
    pageSizeParam:
      $ref: "./node_modules/@auditmation/types-core/schema/pageSizeParam.yml"
  headers:
    pagedLinkHeader:
      $ref: "./node_modules/@auditmation/types-core/schema/pagedLinkHeader.yml"
  securitySchemes:
    access-token:
      type: oauth2
      description: Authentication for the Avigilon Alta Access API (actual method is access token)
      flows:
        authorizationCode:
          authorizationUrl: https://api.openpath.com/auth/login
          tokenUrl: https://api.openpath.com/auth/accessTokens
          scopes:
            read:users: Read access to user information
            read:groups: Read access to group information
            read:acus: Read access to access control units
            read:sites: Read access to site information
            read:user-roles: Read access to user role assignments
            read:user-sites: Read access to user site associations
            read:group-users: Read access to group user memberships
            read:group-entries: Read access to group entries and permissions
            read:acu-ports: Read access to ACU port information
            read:entries: Read access to entry information
  schemas:
    User:
      type: object
      required:
        - id
        - status
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the user
        status:
          type: string
          enum: [active, suspended, inactive] # Changed to snake_case for consistency
          description: User's current status
        opal:
          type: string
          description: OPAL identifier for the user
        identity:
          $ref: '#/components/schemas/UserIdentity'
        groups:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/UserGroup'
          description: Groups the user belongs to
        sites:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/UserSite'
          description: Sites the user has access to
        buildingFloorUnits:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/BuildingFloorUnit'
          description: Building floor units associated with the user
        hasRemoteUnlock:
          type: boolean
          description: Whether the user has remote unlock permissions
        isOverrideAllowed:
          type: boolean
          description: Whether override is allowed for this user
        startDate:
          type: string
          format: date
          description: Access start date
        endDate:
          type: string
          format: date
          description: Access end date
        startAndEndDateTimeZoneId:
          type: string
          description: Timezone for start/end dates
        externalId:
          type: string
          description: External system identifier
        personId:
          type: string
          description: Person identifier
        title:
          type: string
          description: Job title
        department:
          type: string
          description: Department
        lastActivityAt:
          type: string
          format: date-time
          description: Last activity timestamp
        lastParcelReminderAt:
          type: string
          format: date-time
          description: Last parcel reminder timestamp
        manuallyInactivatedAt:
          type: string
          format: date-time
          description: Manual inactivation timestamp
        statusLastUpdatedAt:
          type: string
          format: date-time
          description: Status last updated timestamp
        pictureUrl:
          type: string
          format: url
          description: URL to user's profile picture
        pictureFullSizeUrl:
          type: string
          format: url
          description: URL to user's full-size profile picture
        userCustomFields:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/UserCustomField'
          description: Custom field values for the user
        createdAt:
          type: string
          format: date-time
          description: Timestamp when user was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when user was last updated
    UserInfo:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            organizationId:
              type: number
              description: Organization ID the user belongs to
            avatarUrl:
              type: string
              format: url
              description: URL to user's avatar image
            lastLoginAt:
              type: string
              format: date-time
              description: Timestamp of user's last login
            permissions:
              type: array
              items:
                type: string
              description: List of user permissions
            customFields:
              type: object
              additionalProperties:
                type: string
              description: Custom field values for the user
    Group:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the group
        name:
          type: string
          description: Name of the group
        description:
          type: string
          description: Description of the group
        userCount:
          type: integer
          description: Number of users in the group
        badgeConfig:
          type: object
          description: Badge configuration for the group
        createdAt:
          type: string
          format: date-time
          description: Timestamp when group was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when group was last updated
    GroupInfo:
      allOf:
        - $ref: '#/components/schemas/Group'
        - type: object
          properties:
            organizationId:
              type: number
              description: Organization ID the group belongs to
            parentGroupId:
              type: integer
              format: int64
              description: Parent group ID if this is a child group
            permissions:
              type: array
              items:
                type: string
              description: List of permissions assigned to the group
            accessRules:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/AccessRule'
              description: Access rules for the group
            customFields:
              type: object
              additionalProperties:
                type: string
              description: Custom field values for the group
    Acu:
      type: object
      required:
        - id
        - name
        - status
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the ACU
        name:
          type: string
          description: Name of the ACU
        status:
          type: string
          enum: [active, inactive, error, maintenance] # Changed to snake_case for consistency
          description: Current status of the ACU
        opal:
          type: string
          description: OPAL identifier for the ACU
        hostname:
          type: string
          description: Network hostname of the ACU
        thingName:
          type: string
          description: AWS IoT Thing name for the ACU
        serialNumber:
          type: string
          description: Full serial number of the ACU
        serialNumberBrief:
          type: string
          description: Brief/display version of the serial number
        acuModel:
          $ref: '#/components/schemas/AcuModel'
        awsIotCertArn:
          type: string
          description: AWS IoT certificate ARN
        certOpal:
          type: string
          description: Certificate OPAL identifier
        iotCertOpal:
          type: string
          description: IoT certificate OPAL identifier
        entryCount:
          type: integer
          description: Number of entries/doors controlled by this ACU
        isVirtual:
          type: boolean
          description: Whether this is a virtual ACU
        isGatewayMode:
          type: boolean
          description: Whether the ACU is in gateway mode
        softwareVersionNumber:
          type: string
          description: Current software version number
        statusAt:
          type: string
          format: date-time
          description: Timestamp when status was last updated
        statusMessage:
          type: string
          description: Human-readable status message
        notes:
          type: string
          description: Notes about the ACU
        enterpriseVpnConfig:
          type: object
          description: Enterprise VPN configuration
        expansionBoards:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/ExpansionBoard'
          description: Array of expansion boards connected to this ACU
        org:
          $ref: '#/components/schemas/OrganizationRef'
        ownedByOrg:
          $ref: '#/components/schemas/OrganizationRef'
        acuPorts:
          type: array
          items:
            type: object
          description: Array of ACU ports (also available via dedicated listPorts endpoint)
        acuShadowState:
          type: object
          description: ACU shadow state with firmware and version information
        meson:
          type: object
          description: Meson task information
        shadow:
          type: object
          description: AWS IoT shadow state
        createdAt:
          type: string
          format: date-time
          description: Timestamp when ACU was registered
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when ACU was last updated
    AcuInfo:
      allOf:
        - $ref: '#/components/schemas/Acu'
        - type: object
          properties:
            organizationId:
              type: number
              description: Organization ID the ACU belongs to
            siteId:
              type: number
              description: Site ID where the ACU is located
            portCount:
              type: integer
              description: Number of ports on the ACU
            lastHeartbeat:
              type: string
              format: date-time
              description: Timestamp of last heartbeat from the ACU
            configuration:
              allOf:
                - $ref: '#/components/schemas/AcuConfiguration'
              description: ACU configuration settings
            customFields:
              type: object
              additionalProperties:
                type: string
              description: Custom field values for the ACU
    Role:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the role
        name:
          type: string
          description: Name of the role
        description:
          type: string
          description: Description of the role
        permissions:
          type: array
          items:
            type: string
          description: List of permissions granted by this role
        assignedAt:
          type: string
          format: date-time
          description: Timestamp when the role was assigned
    Site:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the site
        opal:
          type: string
          description: OPAL identifier for the site
        name:
          type: string
          description: Name of the site
        address:
          type: string
          description: Physical address of the site
        address2:
          type: string
          description: Secondary address line
        city:
          type: string
          description: City where the site is located
        state:
          type: string
          description: State/province where the site is located
        zip:
          type: string
          description: Postal/zip code of the site
        country:
          type: string
          description: Country where the site is located
        phone:
          type: string
          description: Phone number for the site
        language:
          type: string
          description: Language setting for the site
        zoneCount:
          type: integer
          description: Number of zones at the site
        userCount:
          type: integer
          description: Number of users at the site
        createdAt:
          type: string
          format: date-time
          description: Timestamp when site was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when site was last updated
    Entry:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the entry
        type:
          type: string
          enum: [access_permission, door_permission, zone_permission]
          description: Type of entry/permission
        name:
          type: string
          description: Name of the entry
        description:
          type: string
          description: Description of the entry
        doorId:
          type: integer
          format: int64
          description: Door ID associated with the entry
        zoneId:
          type: integer
          format: int64
          description: Zone ID associated with the entry
        timeRestrictions:
          allOf:
            - $ref: '#/components/schemas/TimeRestriction'
          description: Time-based access restrictions
        status:
          type: string
          enum: [active, inactive, expired]
          description: Current status of the entry
        createdAt:
          type: string
          format: date-time
          description: Timestamp when entry was created
        expiresAt:
          type: string
          format: date-time
          description: Timestamp when entry expires
    Port:
      type: object
      required:
        - id
        - number
        - type
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the port
        number:
          type: integer
          description: Port number on the ACU
        type:
          type: string
          enum: [reader, door_sensor, motion_sensor, alarm_output]
          description: Type of device connected to the port
        name:
          type: string
          description: Name assigned to the port
        description:
          type: string
          description: Description of the port
        status:
          type: string
          enum: [active, inactive, error, disconnected]
          description: Current status of the port
        configuration:
          allOf:
            - $ref: '#/components/schemas/PortConfiguration'
          description: Port-specific configuration settings
        lastActivity:
          type: string
          format: date-time
          description: Timestamp of last activity on the port
    AccessRule:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the access rule
        name:
          type: string
          description: Name of the access rule
        description:
          type: string
          description: Description of the access rule
        conditions:
          type: array
          items:
            type: string
          description: Conditions that must be met for access
        actions:
          type: array
          items:
            type: string
          description: Actions to take when rule is triggered
    TimeRestriction:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
          description: Start time for access (HH:MM format)
        endTime:
          type: string
          format: date-time
          description: End time for access (HH:MM format)
        daysOfWeek:
          type: array
          items:
            type: string
            enum: [monday, tuesday, wednesday, thursday, friday, saturday, sunday]
          description: Days of the week when access is allowed
        validFrom:
          type: string
          format: date
          description: Start date for the time restriction
        validUntil:
          type: string
          format: date
          description: End date for the time restriction
    AcuConfiguration:
      type: object
      properties:
        pollingInterval:
          type: integer
          description: Heartbeat polling interval in seconds
        timeoutSettings:
          type: object
          additionalProperties:
            type: integer
          description: Various timeout settings
        securitySettings:
          type: object
          additionalProperties:
            type: string
          description: Security-related configuration
        networkSettings:
          type: object
          properties:
            dhcpEnabled:
              type: boolean
              description: Whether DHCP is enabled
            staticIp:
              type: string
              format: ipAddress
              description: Static IP address if DHCP is disabled
            subnetMask:
              type: string
              description: Subnet mask
            gateway:
              type: string
              format: ipAddress
              description: Gateway IP address
    PortConfiguration:
      type: object
      properties:
        sensitivity:
          type: integer
          minimum: 1
          maximum: 10
          description: Sensitivity level for the port
        debounceTime:
          type: integer
          description: Debounce time in milliseconds
        pollingRate:
          type: integer
          description: Polling rate in milliseconds
        thresholds:
          type: object
          additionalProperties:
            type: number
          description: Various threshold settings
        customSettings:
          type: object
          additionalProperties:
            type: string
          description: Custom configuration settings
    AcuModel:
      type: object
      required:
        - id
        - name
        - isBaseModel
      properties:
        id:
          type: integer
          description: Unique identifier for the ACU model
        name:
          type: string
          description: Name of the ACU model
        isBaseModel:
          type: boolean
          description: Whether this is a base model
        acuModelVendor:
          $ref: '#/components/schemas/AcuModelVendor'
    AcuModelVendor:
      type: object
      required:
        - id
        - name
        - code
      properties:
        id:
          type: integer
          description: Unique identifier for the vendor
        name:
          type: string
          description: Vendor name
        code:
          type: string
          description: Vendor code
    ExpansionBoard:
      type: object
      properties:
        id:
          type: integer
          description: Expansion board identifier
        type:
          type: string
          description: Type of expansion board
        portCount:
          type: integer
          description: Number of ports on the expansion board
    OrganizationRef:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          description: Organization identifier
        name:
          type: string
          description: Organization name
    UserIdentity:
      type: object
      required:
        - id
        - email
        - firstName
        - lastName
      properties:
        id:
          type: integer
          description: Identity identifier
        email:
          type: string
          format: email
          description: User's email address
        firstName:
          type: string
          description: User's first name
        lastName:
          type: string
          description: User's last name
        phoneNumber:
          type: string
          description: User's phone number
        avatarUrl:
          type: string
          description: URL to user's avatar image
        middleName:
          type: string
          description: User's middle name
        suffix:
          type: string
          description: User's name suffix
        preferredName:
          type: string
          description: User's preferred name
        pronouns:
          type: string
          description: User's pronouns
        dateOfBirth:
          type: string
          format: date
          description: User's date of birth
        emergencyContactName:
          type: string
          description: Emergency contact name
        emergencyContactPhone:
          type: string
          description: Emergency contact phone
        homeAddress:
          type: string
          description: User's home address
        companyName:
          type: string
          description: User's company name
        workAddress:
          type: string
          description: User's work address
    UserGroup:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          description: Group identifier
        name:
          type: string
          description: Group name
        description:
          type: string
          description: Group description
    UserSite:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          description: Site identifier
        name:
          type: string
          description: Site name
        address:
          type: string
          description: Site address
    BuildingFloorUnit:
      type: object
      properties:
        id:
          type: integer
          description: Building floor unit identifier
        name:
          type: string
          description: Building floor unit name
        buildingId:
          type: integer
          description: Building identifier
        floorId:
          type: integer
          description: Floor identifier
        unitNumber:
          type: string
          description: Unit number
    UserCustomField:
      type: object
      required:
        - id
        - name
        - value
      properties:
        id:
          type: integer
          description: Custom field identifier
        name:
          type: string
          description: Custom field name
        value:
          type: string
          description: Custom field value
        type:
          type: string
          description: Custom field type
    Zone:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the zone
        opal:
          type: string
          description: OPAL identifier for the zone
        name:
          type: string
          description: Name of the zone
        description:
          type: string
          description: Description of the zone
        apbResetIcalText:
          type: string
          description: Anti-passback reset iCal text
        apbExpirationSeconds:
          type: integer
          description: Anti-passback expiration in seconds
        apbUseContactSensor:
          type: boolean
          description: Whether to use contact sensor for anti-passback
        apbAllowSharedOrgReset:
          type: boolean
          description: Whether to allow shared organization reset for anti-passback
        entryCount:
          type: integer
          description: Number of entries in the zone
        offlineEntryCount:
          type: integer
          description: Number of offline entries in the zone
        userCount:
          type: integer
          description: Number of users in the zone
        groupCount:
          type: integer
          description: Number of groups in the zone
        org:
          $ref: '#/components/schemas/OrganizationRef'
        site:
          $ref: '#/components/schemas/ZoneSiteRef'
        zoneShares:
          type: array
          items:
            type: object
          description: Zone shares array
        entries:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/ZoneEntry'
          description: Entries in the zone
        apbAreas:
          type: array
          items:
            type: object
          description: Anti-passback areas
        createdAt:
          type: string
          format: date-time
          description: Timestamp when zone was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when zone was last updated
    ZoneSiteRef:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          description: Site identifier
        name:
          type: string
          description: Site name
    ZoneEntry:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Entry identifier
        name:
          type: string
          description: Entry name
        wirelessLock:
          type: object
          description: Wireless lock information
        acu:
          $ref: '#/components/schemas/ZoneEntryAcu'
    ZoneEntryAcu:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
          description: ACU identifier
    TokenProperties:
      type: object
      properties:
        organizationId:
          type: integer
          format: int64
          description: Organization ID associated with the token
        identityId:
          type: integer
          format: int64
          description: Identity ID of the token holder
        issuedAt:
          type: string
          format: date-time
          description: Token issued timestamp
        expiresAt:
          type: string
          format: date-time
          description: Token expiration timestamp
        scope:
          type: array
          items:
            type: string
          description: Permissions granted by this token
        tokenType:
          type: string
          description: Type of the access token
        jti:
          type: string
          description: JWT token identifier
        iat:
          type: integer
          description: Issued at timestamp (Unix epoch)
        exp:
          type: integer
          description: Expiration timestamp (Unix epoch)
    EntryDetails:
      type: object
      required:
        - id
        - name
      properties:
        opal:
          type: string
          description: OPAL identifier for the entry
        id:
          type: integer
          format: int64
          description: Unique identifier for the entry
        name:
          type: string
          description: Name of the entry
        pincode:
          type: string
          description: Entry pincode if enabled
        isPincodeEnabled:
          type: boolean
          description: Whether pincode is enabled for this entry
        color:
          type: string
          description: Color code for the entry
        isMusterPoint:
          type: boolean
          description: Whether this entry is a muster point
        notes:
          type: string
          description: Notes about the entry
        externalUuid:
          type: string
          description: External UUID identifier
        isReaderless:
          type: boolean
          description: Whether this is a readerless entry
        effectiveLocationRestriction:
          type: object
          description: Effective location restriction for this entry
        org:
          $ref: '#/components/schemas/OrganizationRef'
        shadow:
          type: object
          description: Entry shadow state
        createdAt:
          type: string
          format: date-time
          description: Timestamp when entry was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when entry was last updated
        zone:
          $ref: '#/components/schemas/EntryZone'
        acu:
          $ref: '#/components/schemas/EntryAcu'
        wirelessLock:
          type: object
          description: Wireless lock information
        entryState:
          $ref: '#/components/schemas/EntryState'
        schedule:
          $ref: '#/components/schemas/EntrySchedule'
        cameras:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/EntryCamera'
          description: Cameras associated with the entry
    EntryZone:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Zone identifier
        name:
          type: string
          description: Zone name
        site:
          $ref: '#/components/schemas/EntryZoneSite'
    EntryZoneSite:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Site identifier
        name:
          type: string
          description: Site name
    EntryAcu:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: ACU identifier
        name:
          type: string
          description: ACU name
        isGatewayMode:
          type: boolean
          description: Whether ACU is in gateway mode
    EntryState:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          description: Entry state identifier
        name:
          type: string
          description: Entry state name
    EntrySchedule:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Schedule identifier
        name:
          type: string
          description: Schedule name
    EntryCamera:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Camera identifier
        name:
          type: string
          description: Camera name
        nameExt:
          type: string
          description: Extended camera name
        idExt:
          type: string
          description: External camera identifier
        supportsSnapshot:
          type: boolean
          description: Whether camera supports snapshots
        supportsDeeplink:
          type: boolean
          description: Whether camera supports deep linking
        supportsMotionSnapshot:
          type: boolean
          description: Whether camera supports motion snapshots
        supportsFaceCrop:
          type: boolean
          description: Whether camera supports face cropping
        supportsFaceDetection:
          type: boolean
          description: Whether camera supports face detection
        supportsPeopleDetection:
          type: boolean
          description: Whether camera supports people detection
        supportsMotionRecap:
          type: boolean
          description: Whether camera supports motion recap
        supportsLivestream:
          type: boolean
          description: Whether camera supports live streaming
        videoProviderId:
          type: integer
          description: Video provider identifier
        videoProvider:
          $ref: '#/components/schemas/VideoProvider'
    VideoProvider:
      type: object
      required:
        - id
        - videoProviderTypeId
      properties:
        id:
          type: integer
          description: Video provider identifier
        videoProviderTypeId:
          type: integer
          description: Video provider type identifier
paths:
  /organizations/{organizationId}/users:
    get:
      tags:
        - user
      summary: Retrieves all users in the organization
      operationId: listUsers
      x-method-name: list
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/pageSizeParam'
      responses:
        '200':
          description: List of users
          headers:
            link:
              $ref: '#/components/headers/pagedLinkHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      security:
        - access-token: ["read:users"]
  /organizations/{organizationId}/users/{userId}:
    get:
      tags:
        - user
      summary: Retrieves single user details by user ID
      operationId: getUser
      x-method-name: get
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/userIdParam'
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
      security:
        - access-token: ["read:users"]
  /organizations/{organizationId}/users/{userId}/roles:
    get:
      tags:
        - user
      summary: Retrieves all roles assigned to a specific user
      operationId: listUserRoles
      x-method-name: listRoles
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/userIdParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/pageSizeParam'
      responses:
        '200':
          description: List of user roles
          headers:
            link:
              $ref: '#/components/headers/pagedLinkHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
      security:
        - access-token: ["read:user-roles"]
  /organizations/{organizationId}/users/{userId}/sites:
    get:
      tags:
        - user
      summary: Retrieves all sites associated with a specific user
      operationId: listUserSites
      x-method-name: listSites
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/userIdParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/pageSizeParam'
      responses:
        '200':
          description: List of user sites
          headers:
            link:
              $ref: '#/components/headers/pagedLinkHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Site'
      security:
        - access-token: ["read:user-sites"]
  /organizations/{organizationId}/groups:
    get:
      tags:
        - group
      summary: Retrieves all access groups in the organization
      operationId: listGroups
      x-method-name: list
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/pageSizeParam'
      responses:
        '200':
          description: List of groups
          headers:
            link:
              $ref: '#/components/headers/pagedLinkHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
      security:
        - access-token: ["read:groups"]
  /organizations/{organizationId}/groups/{groupId}:
    get:
      tags:
        - group
      summary: Retrieves single access group details by group ID
      operationId: getGroup
      x-method-name: get
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/groupIdParam'
      responses:
        '200':
          description: Group details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInfo'
      security:
        - access-token: ["read:groups"]
  /organizations/{organizationId}/groups/{groupId}/users:
    get:
      tags:
        - group
      summary: Retrieves all users belonging to a specific group
      operationId: listGroupUsers
      x-method-name: listUsers
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/groupIdParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/pageSizeParam'
      responses:
        '200':
          description: List of group users
          headers:
            link:
              $ref: '#/components/headers/pagedLinkHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      security:
        - access-token: ["read:group-users"]
  /organizations/{organizationId}/groups/{groupId}/entries:
    get:
      tags:
        - group
      summary: Retrieves all entries/permissions for a specific group
      operationId: listGroupEntries
      x-method-name: listEntries
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/groupIdParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/pageSizeParam'
      responses:
        '200':
          description: List of group entries
          headers:
            link:
              $ref: '#/components/headers/pagedLinkHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entry'
      security:
        - access-token: ["read:group-entries"]
  /organizations/{organizationId}/acus:
    get:
      tags:
        - acu
      summary: Retrieves all Access Control Units (ACUs) in the organization
      operationId: listAcus
      x-method-name: list
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/pageSizeParam'
      responses:
        '200':
          description: List of ACUs
          headers:
            link:
              $ref: '#/components/headers/pagedLinkHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Acu'
      security:
        - access-token: ["read:acus"]
  /organizations/{organizationId}/acus/{acuId}:
    get:
      tags:
        - acu
      summary: Retrieves single ACU details by ACU ID
      operationId: getAcu
      x-method-name: get
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/acuIdParam'
      responses:
        '200':
          description: ACU details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcuInfo'
      security:
        - access-token: ["read:acus"]
  /organizations/{organizationId}/acus/{acuId}/ports:
    get:
      tags:
        - acu
      summary: Retrieves all ports for a specific ACU
      operationId: listAcuPorts
      x-method-name: listPorts
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/acuIdParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/pageSizeParam'
      responses:
        '200':
          description: List of ACU ports
          headers:
            link:
              $ref: '#/components/headers/pagedLinkHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Port'
      security:
        - access-token: ["read:acu-ports"]
  /organizations/{organizationId}/sites:
    get:
      tags:
        - site
      summary: Retrieves all sites in the organization
      operationId: listSites
      x-method-name: list
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
      responses:
        '200':
          description: List of sites
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Site'
      security:
        - access-token: ["read:sites"]
  /organizations/{organizationId}/zones:
    get:
      tags:
        - zone
      summary: Retrieves all zones in the organization
      operationId: listZones
      x-method-name: list
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
      responses:
        '200':
          description: List of zones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Zone'
      security:
        - access-token: ["read:zones"]
  /auth/accessTokens/current:
    get:
      tags:
        - auth
      summary: Retrieves properties and metadata for the current access token
      operationId: getTokenProperties
      x-method-name: getTokenProperties
      responses:
        '200':
          description: Token properties and metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenProperties'
      security:
        - access-token: []
  /organizations/{organizationId}/entries:
    get:
      tags:
        - entry
      summary: Retrieves all entries in the organization
      operationId: listEntries
      x-method-name: list
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
      responses:
        '200':
          description: List of entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntryDetails'
      security:
        - access-token: ["read:entries"]
